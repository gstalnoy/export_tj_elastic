

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	РежимРабочегоСтола = Истина;
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		ОтборЗамер = Параметры.Отбор.Владелец;
		РежимРабочегоСтола = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтборЗамер", "ТолькоПросмотр", Истина);
	Иначе
		Настройки = ВосстановитьНастройкиОтборов();
		ОтборЗамер = Настройки.ОтборЗамер;
		ОтборДлительность = Настройки.ОтборДлительность;
	КонецЕсли;
	УстановитьОтборВладелец(ЭтаФорма);
	УстановитьОтборДлительность(ЭтаФорма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборВладелец(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "Владелец", Форма.ОтборЗамер, , , ЗначениеЗаполнено(Форма.ОтборЗамер), , );
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборДлительность(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ДлительностьМкс", Форма.ОтборДлительность * 1000000, ВидСравненияКомпоновкиДанных.БольшеИлиРавно, , ЗначениеЗаполнено(Форма.ОтборДлительность), , );
КонецПроцедуры

&НаКлиенте
Процедура ОтборДлительностьПриИзменении(Элемент)
	УстановитьОтборДлительность(ЭтаФорма);
	СохранитьНастройкиОтборовКлиент();
КонецПроцедуры


&НаКлиенте
Процедура ОтборЗамерПриИзменении(Элемент)
	УстановитьОтборВладелец(ЭтаФорма);
	СохранитьНастройкиОтборовКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиОтборовКлиент()
	Если РежимРабочегоСтола = Истина Тогда
		СохранитьНастройкиОтборов(ПолучитьНастройкиКлиент());
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНастройкиКлиент()
	Настройки = Новый Структура;
	Настройки.Вставить("ОтборЗамер", ОтборЗамер);
	Настройки.Вставить("ОтборДлительность", ОтборДлительность);
	Возврат Настройки;	
КонецФункции

&НаСервереБезКонтекста
Функция ВосстановитьНастройкиОтборов()
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СобытияЗамераФормаСписка", "НастройкиОтбора");
	НастройкиРезультат = Новый Структура("ОтборЗамер, ОтборДлительность");
	Если ТипЗнч(Настройки)=Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(НастройкиРезультат, Настройки);
	КонецЕсли;
	Возврат НастройкиРезультат;
КонецФункции 

&НаСервереБезКонтекста
Процедура СохранитьНастройкиОтборов(Настройки)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СобытияЗамераФормаСписка", "НастройкиОтбора", Настройки);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле=Элементы.Наименование 
		ИЛИ Поле=Элементы.ДатаСобытия 
		ИЛИ Поле=Элементы.ДатаСобытияМкс
		ИЛИ Поле=Элементы.ДлительностьМкс
		ИЛИ Поле=Элементы.Ссылка
		ИЛИ Поле=Элементы.ТипСобытия
		ИЛИ Поле=Элементы.УровеньСобытия Тогда
		СтандартнаяОбработка = Истина;
	Иначе
		СтандартнаяОбработка = Ложь;
		//пытаемся открыть значение
		ТД = Элемент.ТекущиеДанные;
		ОткрываемоеЗначение = Неопределено;
		Если Поле = Элементы.Владелец Тогда
			ОткрываемоеЗначение = ТД.Владелец;
		ИначеЕсли Поле = Элементы.Файл Тогда 
			ОткрываемоеЗначение = ТД.Файл;
		КонецЕсли;
		ЗаголовокЗначения = "";
		Если Лев(Поле.Имя,7)="Ссылка_" Тогда
			ЗаголовокЗначения = Сред(Поле.Имя, 8);
 			ОткрываемоеЗначение = ПолучитьРеквизитПоИмени(ВыбраннаяСтрока, ЗаголовокЗначения);
 		КонецЕсли; 			
		Если ОткрываемоеЗначение = Неопределено Тогда
			//пусто
		ИначеЕсли ТипЗнч(ОткрываемоеЗначение)=Тип("Строка") Тогда
			ПоказатьСтроку(ОткрываемоеЗначение, СтрШаблон("%1\%2: %3",ТД.Файл,ТД.Наименование,ЗаголовокЗначения));
		Иначе
			ПоказатьЗначение(,ОткрываемоеЗначение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтроку(ОткрываемоеЗначение, ЗаголовокТекста = "")
	Т = Новый ТекстовыйДокумент();
	Т.ДобавитьСтроку(ОткрываемоеЗначение);
	Т.Показать(ЗаголовокТекста);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитПоИмени(ЗНАЧ Ссылка, ЗНАЧ ИмяРеквизита)
	Результат = Неопределено;
	ИмяРеквизитаБезСкобок = "";
	Если Лев(ИмяРеквизита,1)="[" И Прав(ИмяРеквизита,1)="]" Тогда
		ИмяРеквизитаБезСкобок = Сред(ИмяРеквизита,2,СтрДлина(ИмяРеквизита)-2);
	КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	СобытияЗамераКлючевыеСвойства.Значение
	|ИЗ
	|	Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамераКлючевыеСвойства
	|ГДЕ
	|	СобытияЗамераКлючевыеСвойства.Ссылка = &Ссылка
	|	И СобытияЗамераКлючевыеСвойства.Свойство.Наименование = &ИмяРеквизита
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СобытияЗамераКлючевыеСвойства.Значение
	|ИЗ
	|	Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамераКлючевыеСвойства
	|ГДЕ
	|	&ИмяРеквизитаБезСкобок <> """"
	|	И СобытияЗамераКлючевыеСвойства.Ссылка = &Ссылка
	|	И СобытияЗамераКлючевыеСвойства.Свойство.Наименование = &ИмяРеквизитаБезСкобок");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ИмяРеквизита", ИмяРеквизита);
	Запрос.УстановитьПараметр("ИмяРеквизитаБезСкобок", ИмяРеквизитаБезСкобок);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Результат = РезультатЗапроса.Выгрузить()[0].Значение;
	КонецЕсли;
	Возврат Результат;
КонецФункции
